#include <gtk/gtk.h>

// Global variables to hold references to the screens
GtkWidget *first_screen;
GtkWidget *second_screen;

// Function to handle button clicks and switch screens
static void switch_screen(GtkButton *button, gpointer data) {
    if (gtk_widget_get_visible(first_screen)) {
        gtk_widget_hide(first_screen);
        gtk_widget_show(second_screen);
    } else {
        gtk_widget_hide(second_screen);
        gtk_widget_show(first_screen);
    }
}

int main(int argc, char *argv[]) {
    // Initialize GTK
    gtk_init(&argc, &argv);

    // Create a window
    GtkWidget *window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
    gtk_window_set_title(GTK_WINDOW(window), "GTK Screen Change Example");
    gtk_container_set_border_width(GTK_CONTAINER(window), 10);
    gtk_widget_set_size_request(window, 300, 200);
    g_signal_connect(window, "destroy", G_CALLBACK(gtk_main_quit), NULL);
    


    // First screen
    first_screen = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 5);
    GtkWidget *button1 = gtk_button_new_with_label("Scree1 button");
    gtk_box_pack_start(GTK_BOX(first_screen), button1, TRUE, FALSE, 0);
    gtk_widget_hide(first_screen);
       
    // Second screen
    second_screen = gtk_label_new("This is the second screen");
    gtk_widget_hide(second_screen);  // Initially hide the second screen
    
    // Create a button to switch screens
    GtkWidget *button = gtk_button_new_with_label("Switch Screen");
    g_signal_connect(button, "clicked", G_CALLBACK(switch_screen), NULL);


    // Pack the button and screens into a vertical box
    GtkWidget *vbox = gtk_box_new(GTK_ORIENTATION_HORIZONTAL, 5);
    gtk_box_pack_start(GTK_BOX(vbox), button, FALSE, FALSE, 0);
    gtk_box_pack_start(GTK_BOX(vbox), first_screen, TRUE, TRUE, 0);
    gtk_box_pack_start(GTK_BOX(vbox), second_screen, TRUE, TRUE, 0);


    // Add the vbox to the window and show all widgets
    gtk_container_add(GTK_CONTAINER(window), vbox);
    gtk_widget_show_all(window);


    // Start the GTK main loop
    gtk_main();

    return 0;
}


static void switch_screen(GtkButton *button, gpointer data) {
    GtkWidget *container = GTK_WIDGET(data);

    // Remove the current screen from the container
    gtk_container_remove(GTK_CONTAINER(container), gtk_bin_get_child(GTK_BIN(container)));

    // Create and add the new screen to the container
    if (gtk_widget_get_visible(first_screen)) {
        gtk_container_add(GTK_CONTAINER(container), second_screen);
    } else {
        gtk_container_add(GTK_CONTAINER(container), first_screen);
    }

    // Show all widgets
    gtk_widget_show_all(container);
}